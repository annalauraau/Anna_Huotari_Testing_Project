
#******************** Settings ************************

*** Settings ***

# TODO: Write Documentation e.g. User Registration Test scenario with verification, valid and invalid credentials.

Documentation	

- This test suite verifies the functionality of the User Registration feature, including testing scenarios with valid and invalid credentials. The tests cover positive cases (successful registration) and negative cases (registration failures due to invalid inputs or missing fields).

# TODO: Write Precondition, Postcondition, Tags

Pre Condition	

- Ensure the registration page (https://gitlab.com/users/sign_up) is accessible.
- The testing environment should have a clean database to avoid conflicts from pre-existing users.

Post Condition	

- Verify that the user is registered successfully (positive case) or receives appropriate error messages (negative cases).
- No unintended changes or data corruption in the application.

Tags

- Registration
- PositiveTests
- NegativeTests

#******************* Common Variables ********************

*** Variables ***

# NOTE: Please Remove your login credential before uploading Assignments

# TODO: Write Registration field variables


LoginUrl = https://gitlab.com/users/sign_up

LoginUrl = https://gitlab.com/users/sign_up

# Registration Field Variables
ValidUsername = "testuser123"
ValidPassword = "StrongPassword123!"
InvalidEmail = "invalid-email"
EmptyPassword = ""
DuplicateUsername = "testuser123" # This is the same as ValidUsername

#******************** Test Cases *************************

*** Test Case ***

# TODO: Write Positive and Negative Test Cases and Test Process steps (Think about possible test cases)

# Positive Test examples are below write test process steps for each below test case

	Register user with valid username and password 
	- Remember credentials which you are going to use for whole application testing 

Positive Test Cases:

Register user with a valid username and password
Step 1: Navigate to ${LoginUrl}.
Step 2: Enter ${ValidUsername} in the username field.
Step 3: Enter ${ValidPassword} in the password field.
Step 4: Enter a valid email address in the email field (e.g., testuser123@example.com).
Step 5: Complete the reCAPTCHA verification.
Step 6: Click the "Register" button.
Expected Result: The user is registered successfully and redirected to the dashboard or login page.

# Negative Test examples keywords are below write test process steps for each below test case 

	Register user with same above username,
		...empty password,
		...invalid email,
		...Without recaptcha,

Negative Test Cases:

Register user with the same username (Duplicate)

Step 1: Navigate to ${LoginUrl}.
Step 2: Enter ${DuplicateUsername} in the username field.
Step 3: Enter ${ValidPassword} in the password field.
Step 4: Enter a valid email address in the email field (e.g., testuserduplicate@example.com).
Step 5: Complete the reCAPTCHA verification.
Step 6: Click the "Register" button.
Expected Result: The system shows an error message indicating that the username is already taken.
Register user with an empty password

Step 1: Navigate to ${LoginUrl}.
Step 2: Enter ${ValidUsername} in the username field.
Step 3: Leave the password field empty.
Step 4: Enter a valid email address in the email field.
Step 5: Complete the reCAPTCHA verification.
Step 6: Click the "Register" button.
Expected Result: The system shows an error message indicating that the password is required.
Register user with an invalid email

Step 1: Navigate to ${LoginUrl}.
Step 2: Enter ${ValidUsername} in the username field.
Step 3: Enter ${ValidPassword} in the password field.
Step 4: Enter ${InvalidEmail} in the email field.
Step 5: Complete the reCAPTCHA verification.
Step 6: Click the "Register" button.
Expected Result: The system shows an error message indicating that the email format is invalid.
Register user without completing reCAPTCHA

Step 1: Navigate to ${LoginUrl}.
Step 2: Enter ${ValidUsername} in the username field.
Step 3: Enter ${ValidPassword} in the password field.
Step 4: Enter a valid email address in the email field (e.g., testusernocaptcha@example.com).
Step 5: Do not complete the reCAPTCHA verification.
Step 6: Click the "Register" button.
Expected Result: The system shows an error message indicating that the reCAPTCHA must be completed.

